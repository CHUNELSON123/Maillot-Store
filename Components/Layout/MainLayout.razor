@inherits LayoutComponentBase
@inject MaillotStore.Services.SearchStateService SearchState
@inject MaillotStore.Services.ReferralService ReferralService
@inject NavigationManager NavManager

<header>
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container-fluid align-items-center">
            @* --- Logo and Brand Name (Always Visible) --- *@
            <a class="navbar-brand d-flex align-items-center" href="">
                <img src="/Images/maillotstore-logo.jpeg" alt="Maillot Store Logo" class="logo">
                <span class="brand-text ms-2">Maillot Store</span>
            </a>

            @* --- Desktop Navigation & Search --- *@
            <div class="collapse navbar-collapse" id="main-nav-desktop">
                @* --- Search Bar (Desktop) --- *@
                <div class="search-container mx-auto d-none d-lg-block">
                    <input type="text" class="form-control search-bar" placeholder="Search for jerseys..."
                           @bind="searchTerm" @oninput="PerformSearch" />
                </div>

                @* --- Desktop Nav Links --- *@
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item"><a class="nav-link" href="/">Home</a></li>
                    <li class="nav-item"><a class="nav-link" href="/shop">Shop</a></li>
                    <li class="nav-item"><a class="nav-link" href="/about">About</a></li>
                    <li class="nav-item"><a class="nav-link" href="/contact">Contact</a></li>
                    <li class="nav-item"><a class="nav-link" href="/checkout">Checkout</a></li>

                    <AuthorizeView>
                        <Authorized>
                            @if (context.User.IsInRole("Influencer"))
                            {
                                <li class="nav-item"><a class="nav-link" href="/influencer-dashboard">Dashboard</a></li>
                            }
                            else if (context.User.IsInRole("Admin"))
                            {
                                <li class="nav-item"><a class="nav-link" href="/admin/dashboard">Dashboard</a></li>
                            }
                            <li class="nav-item">
                                <form action="/Account/Logout" method="post">
                                    <AntiforgeryToken />
                                    <input type="hidden" name="returnUrl" value="/" />
                                    <button type="submit" class="nav-link btn btn-link">Logout</button>
                                </form>
                            </li>
                        </Authorized>
                        <NotAuthorized>
                            @if (!isReferred)
                            {
                                <li class="nav-item"><a class="nav-link" href="/Account/Login">Login</a></li>
                            }
                        </NotAuthorized>
                    </AuthorizeView>
                </ul>
            </div>

            @* --- Mobile Hamburger Button --- *@
            <button class="navbar-toggler d-lg-none" type="button" @onclick="ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>
    </nav>

    @* --- Search Bar (Mobile) --- *@
    <div class="search-container-mobile d-lg-none mt-2 px-3">
        <input type="text" class="form-control search-bar" placeholder="Search for jerseys..."
               @bind="searchTerm" @oninput="PerformSearch" />
    </div>
</header>

@* Add Overlay Div - This covers the screen when the menu is open *@
@if (!collapseNavMenu)
{
    <div class="sidenav-overlay" @onclick="ToggleNavMenu"></div>
}

@* --- Mobile Sliding Navigation Menu --- *@
<div class="@NavMenuCssClass">
    <div class="sidenav-content">
        <a href="javascript:void(0)" class="closebtn" @onclick="CloseNavMenu">&times;</a>

        @* --- START OF UPDATE --- *@
        <a class="nav-link" href="/" @onclick="CloseNavMenu">Home</a>
        <a class="nav-link" href="/shop" @onclick="CloseNavMenu">Shop</a>
        <a class="nav-link" href="/about" @onclick="CloseNavMenu">About</a>
        <a class="nav-link" href="/contact" @onclick="CloseNavMenu">Contact</a>
        <a class="nav-link" href="/checkout" @onclick="CloseNavMenu">Checkout</a>

        <AuthorizeView>
            <Authorized>
                @if (context.User.IsInRole("Influencer"))
                {
                    <a class="nav-link" href="/influencer-dashboard" @onclick="CloseNavMenu">Dashboard</a>
                }
                else if (context.User.IsInRole("Admin"))
                {
                    <a class="nav-link" href="/admin/dashboard" @onclick="CloseNavMenu">Dashboard</a>
                }
                <form action="/Account/Logout" method="post" class="w-100">
                    <AntiforgeryToken />
                    <input type="hidden" name="returnUrl" value="/" />
                    @* No onclick needed here, form post reloads page *@
                    <button type="submit" class="nav-link btn btn-link text-start w-100" style="padding: 8px 8px 8px 32px;">Logout</button>
                </form>
            </Authorized>
            <NotAuthorized>
                @if (!isReferred)
                {
                    <a class="nav-link" href="/Account/Login" @onclick="CloseNavMenu">Login</a>
                }
            </NotAuthorized>
        </AuthorizeView>
        @* --- END OF UPDATE --- *@
    </div>
</div>

<main>
    @Body
</main>
<Footer />

@code {
    private bool collapseNavMenu = true;
    private string searchTerm = string.Empty;
    private bool isReferred;

    private string NavMenuCssClass => collapseNavMenu ? "sidenav" : "sidenav open";

    protected override void OnInitialized()
    {
        isReferred = ReferralService.IsReferred();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    // Explicit method to ensure the menu closes
    private void CloseNavMenu()
    {
        collapseNavMenu = true;
    }

    private void PerformSearch(ChangeEventArgs e)
    {
        searchTerm = e.Value?.ToString() ?? string.Empty;
        SearchState.SetSearchTerm(searchTerm);

        if (!NavManager.Uri.EndsWith("/shop", StringComparison.OrdinalIgnoreCase))
        {
            NavManager.NavigateTo("/shop");
        }
    }
}