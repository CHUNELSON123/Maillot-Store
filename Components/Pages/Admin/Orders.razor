@page "/admin/orders"
@using MaillotStore.Components.Layout
@using MaillotStore.Data
@using MaillotStore.Models
@using Microsoft.EntityFrameworkCore
@layout AdminLayout
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Orders</PageTitle>

<div class="orders-container">

    <h1 class="order-list-title">Order List</h1>

    <div class="table-responsive">
        <table class="table orders-table">
            <thead>
                <tr>
                    <th>S/N</th>
                    <th>Customer Name</th>
                    <th>Products</th>
                    <th>Price</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (orders != null)
                {
                    @foreach (var order in orders)
                    {
                        <tr>
                            <td>@order.Id</td>
                            <td>@order.CustomerName</td>
                            <td>@order.OrderItems.Count()</td>
                            <td>FCFA @order.TotalAmount.ToString("N0") XAF</td>
                            <td>
                                <button class="btn btn-view" @onclick="() => ViewOrder(order.Id)">View</button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    @* Add your pagination logic here if needed *@
</div>

@code {
    private List<Order> orders;

    protected override async Task OnInitializedAsync()
    {
        orders = await DbContext.Orders.Include(o => o.OrderItems).ToListAsync();
    }

    private void ViewOrder(int orderId)
    {
        NavigationManager.NavigateTo($"/admin/view-order/{orderId}");
    }
}